-처음 생각한 방법
입력받은 리스트를 이중 for문으로 반복 하면서 각 인덱스에서 시작해 다음 조건이 만족하면 tmp 배열에 넣는다. tmp 배열에 마지막에 넣은 값보다 현재 인덱스 요소 값이 크면 tmp에 넣음. 한 바퀴 돌면 tmp 배열의 길이를 ans 배열에 넣는다. 모든 배열에서 시작해 위의 과정을 반복한다. 모든 과정이 끝나면 ans 의 최댓값을 반환한다.
<코드>
n = int(input())
arr = list(map(int, input().split()))
ans =  []

for i in range(n):
    tmp = []
    tmp.append(arr[i])
    for j in range(i, n):
        if arr[j] > tmp[-1]:
            tmp.append(arr[j])
    ans.append(len(tmp))
    print(tmp)
print(max(ans))
---> 문제점 : 가장 긴 증가하는 부분수열을 구해야 하는데 중간에 그냥 더 큰 값이 있으면 끊긴다.

-답 : dp 이용
--->각 인덱스에서 가장 긴 증가하는 부분수열의 길이를 저장해 나간다.
arr = {10, 20, 10, 30, 20, 50} 의 네 번째 숫자까지 봤을 때, 30보다 작고 가장 긴 증가하는 수열은 두 번째 수인 20 일때 길이가 2인 경우이다. 그러므로 30에서 dp 값은 2에서 1을 더한 3이다.
